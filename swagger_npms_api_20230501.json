{
  "openapi": "3.0.1",
  "info": {
    "title": "NPMS Web API",
    "version": "v1"
  },
  "paths": {
    "/api/asyncresponses/{guid}": {
      "get": {
        "tags": [
          "AsyncResponses"
        ],
        "summary": "指定した ID の非同期レスポンスを取得します。",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/conditions": {
      "get": {
        "tags": [
          "Conditions"
        ],
        "summary": "条件の一覧を取得します",
        "parameters": [
          {
            "name": "serial",
            "in": "query",
            "description": "リクエストの連番。応答にそのまま返します。",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageNo",
            "in": "query",
            "description": "ページ番号",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "1ページ当たりの取得件数",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "ソートカラム",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "昇順か?",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "テキスト検索文字列",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterCount",
            "in": "query",
            "description": "カラムフィルタ数",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionDtoTableResultNpmsOkResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conditions"
        ],
        "summary": "idsで指定された Id の条件を削除します",
        "requestBody": {
          "description": "条件の Id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdsDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conditions"
        ],
        "summary": "条件を作成すます",
        "requestBody": {
          "description": "作成する条件",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConditionDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/conditions/{id}": {
      "get": {
        "tags": [
          "Conditions"
        ],
        "summary": "指定された Id の条件を取得します",
        "operationId": "GetConditionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "条件 Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conditions"
        ],
        "summary": "id で指定された Id の条件を削除します",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "条件の Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Conditions"
        ],
        "summary": "Id で指定した条件を更新します",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "更新対象の条件 Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "更新内容",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConditionDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/npmdb/tables/{table}": {
      "get": {
        "tags": [
          "Npmdb"
        ],
        "summary": "NPMDB のテーブルのデータを取得します。\r\n対応しているテーブルは以下です。\r\n<list type=\"bullet\"><item><description>Fdsol.Npms.PM.Model.Npm.Data.appraisal_master</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.class_master</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.crrspnd_model_date</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.date_master</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.db_master</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.factor_name</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.industryname</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.macro_master</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.model_date</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.model_master</description></item><item><description>Fdsol.Npms.PM.Model.Npm.Data.security_master</description></item></list>",
        "parameters": [
          {
            "name": "table",
            "in": "path",
            "description": "テーブル名。",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "YYYYMMDD形式のデータ日付。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial",
            "in": "query",
            "description": "リクエストの連番。応答にそのまま返します。",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ページインデックス。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "ページ長。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "ソートカラム。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "ソート昇順かどうか。",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "テキスト検索文字列。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterCount",
            "in": "query",
            "description": "カラムフィルター数。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "レコードの一覧。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDtoTableResultNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "テーブル名が無効。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/npmdb/dataTypes/{dataType}": {
      "get": {
        "tags": [
          "Npmdb"
        ],
        "summary": "NPMDB のデータを取得します。\r\n対応しているデータは以下です。\r\n<list type=\"bullet\"><item><term>dates</term><description>Fdsol.Npms.PM.Model.Npm.Data.market の最小データ日付と\r\nFdsol.Npms.PM.Model.Npm.Data.db_master.db_update_date の期間内の\r\nFdsol.Npms.PM.Model.Npm.Data.date_master の営業日。</description></item><item><term>models</term><description>Fdsol.Npms.PM.Model.Npm.Data.model_master の date\r\nで有効なリスクモデル。</description></item></list>",
        "parameters": [
          {
            "name": "dataType",
            "in": "path",
            "description": "データ名。",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "YYYYMMDD形式のデータ日付。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial",
            "in": "query",
            "description": "リクエストの連番。応答にそのまま返します。",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ページインデックス。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "ページ長。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "ソートカラム。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "ソート昇順かどうか。",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "テキスト検索文字列。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterCount",
            "in": "query",
            "description": "カラムフィルター数。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "レコードの一覧。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectTableResultNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "データ名が無効。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/optimize": {
      "post": {
        "tags": [
          "Optimize"
        ],
        "summary": "最適化を実行します。",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsOkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolios": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "ポートフォリオの一覧を取得します。",
        "parameters": [
          {
            "name": "serial",
            "in": "query",
            "description": "リクエストの連番。応答にそのまま返します。",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ページインデックス。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "ページ長。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "ソートカラム。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "ソート昇順かどうか。",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "テキスト検索文字列。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterCount",
            "in": "query",
            "description": "カラムフィルター数。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "ポートフォリオの一覧。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoTableResultNpmsOkResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "ポートフォリオを作成します。",
        "requestBody": {
          "description": "作成するポートフォリオ。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePortfolioDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePortfolioDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePortfolioDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "ポートフォリオが作成されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "作成しようとしたポートフォリオの検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolios"
        ],
        "summary": "指定された複数の ID のポートフォリオを削除します。",
        "requestBody": {
          "description": "ポートフォリオ ID の配列。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdsDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "ポートフォリオが削除されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsWarningResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolios/{id}": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "指定された ID のポートフォリオを取得します。",
        "operationId": "GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "ポートフォリオが取得されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Portfolios"
        ],
        "summary": "指定された ID のポートフォリオを更新します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "更新するポートフォリオ。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePortfolioDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePortfolioDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePortfolioDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "ポートフォリオが更新されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "更新しようとしたポートフォリオの検証エラー。\r\n            または、URI で指定した ID と更新しようとしたポートフォリオ ID が一致しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "更新しようとしたポートフォリオ ID は存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolios"
        ],
        "summary": "指定された ID のポートフォリオを削除します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "ポートフォリオが削除されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolios/{id}/assets": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "ポートフォリオの銘柄の一覧を取得します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "データ日付。省略された場合は最新データ日付。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetListType",
            "in": "query",
            "description": "銘柄リスト種別。省略された場合は、\r\n            目標 Fdsol.Npms.PM.Model.Data.AssetListType.Target。",
            "schema": {
              "$ref": "#/components/schemas/AssetListType"
            }
          },
          {
            "name": "serial",
            "in": "query",
            "description": "リクエストの連番。応答にそのまま返します。",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ページインデックス。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "ページ長。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "ソートカラム。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "ソート昇順かどうか。",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "テキスト検索文字列。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterCount",
            "in": "query",
            "description": "カラムフィルター数。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "ポートフォリオの一覧。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDtoTableResultNpmsOkResponse"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "ポートフォリオに資産を作成します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "作成する資産。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "資産が作成されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "作成しようとした資産の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolios"
        ],
        "summary": "指定された ID とコードの配列のポートフォリオの資産を削除します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "削除する資産の指定。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAssetsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAssetsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAssetsDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "資産が削除されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolios/{id}/assets/bulk": {
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "ポートフォリオに複数の資産を作成します。",
        "description": "dtos\r\n            に資産が指定されていない場合は成功応答を返します。\r\n            dtos 内の以下の資産は無視されます。\r\n            <list type=\"bullet\"><item><description>データ日付が営業日でない。</description></item><item><description>コードが無効。</description></item><item><description>ポートフォリオに既に登録済み。</description></item><item><description>要求内の同一の資産。</description></item></list>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "作成する複数の資産。",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateAssetDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateAssetDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateAssetDto"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "資産が作成されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDtoListNpmsOkResponse"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolios/{id}/assets/{code}": {
      "put": {
        "tags": [
          "Portfolios"
        ],
        "summary": "ポートフォリオの資産を更新します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "資産のコード。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "更新する資産。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "更新しようとした資産の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。\r\n            指定されたコードの資産は存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "資産が更新されました。"
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolios"
        ],
        "summary": "指定された ID とコードのポートフォリオの資産を削除します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ポートフォリオ ID。",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "資産のコード。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "資産リストを選択。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetListSelectorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetListSelectorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetListSelectorDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "資産が削除されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID の検証エラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "指定された ID のポートフォリオは存在しません。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stocks": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "株式の一覧を取得します。",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "データ日付。省略された場合は最新データ日付。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial",
            "in": "query",
            "description": "リクエストの連番。応答にそのまま返します。",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ページインデックス。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "ページ長。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "ソートカラム。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "ソート昇順かどうか。",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "テキスト検索文字列。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterCount",
            "in": "query",
            "description": "カラムフィルター数。",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "株式の一覧。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockDtoTableResultNpmsOkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stocks/{id}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "証券コードと日付で株式を取得します。",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "証券コード。",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "データ日付。省略された場合は最新データ日付。",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockDtoNpmsOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpmsErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AssetDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "データ日付を取得または設定します。",
            "nullable": true
          },
          "assetListType": {
            "$ref": "#/components/schemas/AssetListType"
          },
          "code": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "コードを取得または設定します。"
          },
          "quantity": {
            "type": "number",
            "description": "数量を取得または設定します。\r\n数量はコンテキストにより株数、ウェイト、金額などの意味を持ちます。",
            "format": "double"
          },
          "portfolioId": {
            "type": "integer",
            "description": "ポートフォリオ ID を取得または設定します。",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "漢字名を取得または設定します。",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "株価を取得または設定します。",
            "format": "double",
            "nullable": true
          },
          "updateTime": {
            "type": "string",
            "description": "更新日時を取得または設定します。",
            "format": "date-time"
          },
          "updateUserName": {
            "type": "string",
            "description": "更新ユーザー名を取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "銘柄のデータ転送オブジェクトのクラス。"
      },
      "AssetDtoListNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDto"
            },
            "description": "結果を取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "AssetDtoNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/AssetDto"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "AssetDtoTableResult": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "検索などの処理後のトータルレコード数を取得または設定します。",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "ページインデックスを取得または設定します。",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "description": "リクエストの連番を取得または設定します。",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDto"
            },
            "description": "レコードを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "テーブルのビューへの結果クラス。"
      },
      "AssetDtoTableResultNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/AssetDtoTableResult"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "AssetListSelectorDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "データ日付を取得または設定します。",
            "nullable": true
          },
          "assetListType": {
            "$ref": "#/components/schemas/AssetListType"
          }
        },
        "additionalProperties": false,
        "description": "資産リストを選択する設定のデータ転送オブジェクト。"
      },
      "AssetListType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "資産リストの種別の列挙。\r\n<list type=\"bullet\"><item><term>0</term><description>残高。保有。Fdsol.Npms.PM.Model.Data.AssetListType.Balance。</description><term>1</term><description>目標。Fdsol.Npms.PM.Model.Data.AssetListType.Target。</description><term>2</term><description>入出力。Fdsol.Npms.PM.Model.Data.AssetListType.InOut。</description></item></list>",
        "format": "int32"
      },
      "CAlpha": {
        "type": "object",
        "properties": {
          "factors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CFactorReturn"
            },
            "description": "ファクター期待リターン",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ファクター期待リターン"
      },
      "CAmountBounds": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/CBounds"
          },
          "lot": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "最小売買金額制約の設定可能範囲"
      },
      "CBenchmark": {
        "type": "object",
        "properties": {
          "index": {
            "type": "string",
            "description": "ベンチマークインデックス",
            "nullable": true
          },
          "beta": {
            "$ref": "#/components/schemas/CBeta"
          },
          "indexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "ベンチマークインデックスの一覧",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "条件のベンチマーク設定"
      },
      "CBeta": {
        "type": "object",
        "properties": {
          "net": {
            "$ref": "#/components/schemas/DoubleNullableCRange"
          },
          "long": {
            "$ref": "#/components/schemas/DoubleNullableCRange"
          },
          "short": {
            "$ref": "#/components/schemas/DoubleNullableCRange"
          }
        },
        "additionalProperties": false,
        "description": "ベータ値"
      },
      "CBounds": {
        "type": "object",
        "properties": {
          "upperLimit": {
            "type": "number",
            "description": "以下",
            "format": "double"
          },
          "lowerLimit": {
            "type": "number",
            "description": "以上",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "description": "未満",
            "format": "double"
          },
          "lowerBound": {
            "type": "number",
            "description": "越える",
            "format": "double"
          },
          "onlyInteger": {
            "type": "boolean",
            "description": "正数か"
          }
        },
        "additionalProperties": false,
        "description": "入力可能範囲"
      },
      "CCoefficiest": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "制約を課すか"
          },
          "first": {
            "type": "number",
            "description": "一次係数",
            "format": "double",
            "nullable": true
          },
          "second": {
            "type": "number",
            "description": "二次係数",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "コスト係数"
      },
      "CCoefficiests": {
        "type": "object",
        "properties": {
          "buy": {
            "$ref": "#/components/schemas/CCoefficiest"
          },
          "sell": {
            "$ref": "#/components/schemas/CCoefficiest"
          },
          "shortSell": {
            "$ref": "#/components/schemas/CCoefficiest"
          },
          "buyCover": {
            "$ref": "#/components/schemas/CCoefficiest"
          }
        },
        "additionalProperties": false,
        "description": "コスト係数"
      },
      "CConstraint": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "description": "制約対象",
            "nullable": true
          },
          "prohibited": {
            "type": "string",
            "description": "売買種別",
            "nullable": true
          },
          "comparison": {
            "type": "string",
            "description": "比較種別",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "制約値",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "その他売買制約"
      },
      "CEfficientFrontier": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "制約を課すか"
          },
          "points": {
            "type": "integer",
            "description": "計算ポイント数",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "効率的フロンティア"
      },
      "CExpectedReturn": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "有効か"
          },
          "lowerLimit": {
            "type": "number",
            "description": "下限",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "期待リターン"
      },
      "CFactor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "ファクター名",
            "nullable": true
          },
          "benchmark": {
            "type": "number",
            "description": "ベンチマーク値",
            "format": "double",
            "nullable": true
          },
          "net": {
            "$ref": "#/components/schemas/StringCRange"
          },
          "long": {
            "$ref": "#/components/schemas/StringCRange"
          },
          "short": {
            "$ref": "#/components/schemas/StringCRange"
          }
        },
        "additionalProperties": false,
        "description": "ファクター"
      },
      "CFactorReturn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "リスクインデックス名",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "期待収益率",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ファクター期待リターン"
      },
      "CHRBenchmark": {
        "type": "object",
        "properties": {
          "lowerLimit": {
            "$ref": "#/components/schemas/CBounds"
          },
          "upperLimit": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "上下限の入力可能範囲"
      },
      "CHRatio": {
        "type": "object",
        "properties": {
          "lowerLimit": {
            "type": "number",
            "description": "下限",
            "format": "double",
            "nullable": true
          },
          "upperLimit": {
            "type": "number",
            "description": "上限",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "上下限"
      },
      "CHoldingRatio": {
        "type": "object",
        "properties": {
          "applyToHoldingStocks": {
            "type": "boolean",
            "description": "既に保有する銘柄にも適用するか"
          },
          "whole": {
            "$ref": "#/components/schemas/CHRatio"
          },
          "benchmark": {
            "$ref": "#/components/schemas/CHRatio"
          },
          "bounds": {
            "$ref": "#/components/schemas/CHoldingRatioBounds"
          }
        },
        "additionalProperties": false,
        "description": "個別銘柄保有比率"
      },
      "CHoldingRatioBounds": {
        "type": "object",
        "properties": {
          "benchmark": {
            "$ref": "#/components/schemas/CHRBenchmark"
          }
        },
        "additionalProperties": false,
        "description": "個別銘柄保有比率の入力可能範囲"
      },
      "CHoldingShares": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "有効か"
          },
          "long": {
            "$ref": "#/components/schemas/CMaxShares"
          },
          "short": {
            "$ref": "#/components/schemas/CMaxShares"
          }
        },
        "additionalProperties": false,
        "description": "保有株式数上限"
      },
      "CIndexWeightedCopy": {
        "type": "object",
        "properties": {
          "simplify": {
            "type": "boolean",
            "description": "単純コピーを行う"
          }
        },
        "additionalProperties": false,
        "description": "指数ウェイトコピー"
      },
      "CIndustrialClassification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "業種区分 Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "業種区分名",
            "nullable": true
          },
          "factors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CFactor"
            },
            "description": "業種ごとの上下限",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "業種区分"
      },
      "CIndustryFactor": {
        "type": "object",
        "properties": {
          "factors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CFactor"
            },
            "description": "ファクター一覧",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "ファクター種別",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "業種ファクター"
      },
      "CIndustryRatio": {
        "type": "object",
        "properties": {
          "industries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIndustrialClassification"
            },
            "description": "業種区分一覧",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "業種構成比"
      },
      "CInfo": {
        "type": "object",
        "properties": {
          "riskModel": {
            "type": "string",
            "description": "リスクモデル Id",
            "nullable": true
          },
          "allowShortSell": {
            "type": "boolean",
            "description": "空売りを許可する"
          }
        },
        "additionalProperties": false,
        "description": "条件の基本情報"
      },
      "CInvestment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "投資金額",
            "format": "int64",
            "nullable": true
          },
          "lowerLimit": {
            "type": "number",
            "description": "株式投資比率下限",
            "format": "double",
            "nullable": true
          },
          "upperLimit": {
            "type": "number",
            "description": "株式投資比率上限",
            "format": "double",
            "nullable": true
          },
          "fixed": {
            "type": "boolean",
            "description": "保有と同比率か"
          }
        },
        "additionalProperties": false,
        "description": "投資金額"
      },
      "CInvestmentAmount": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "long": {
            "$ref": "#/components/schemas/CInvestment"
          },
          "short": {
            "$ref": "#/components/schemas/CInvestment"
          },
          "addition": {
            "$ref": "#/components/schemas/CInvestment"
          }
        },
        "additionalProperties": false,
        "description": "投資金額"
      },
      "CInvestmentAmountBounds": {
        "type": "object",
        "properties": {
          "long": {
            "$ref": "#/components/schemas/CInvestmentBounds"
          },
          "short": {
            "$ref": "#/components/schemas/CInvestmentBounds"
          },
          "addition": {
            "$ref": "#/components/schemas/CInvestmentBounds"
          }
        },
        "additionalProperties": false,
        "description": "Fdsol.Npms.PM.Model.Dto.ConditionDetail.CTargetPortfolio.CInvestmentAmount の設定可能範囲"
      },
      "CInvestmentBounds": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/CBounds"
          },
          "limit": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "`CInvestment` の設定可能範囲"
      },
      "CLiquidity": {
        "type": "object",
        "properties": {
          "amountTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "制約対象一覧",
            "nullable": true
          },
          "prohibitedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "売買種別一覧",
            "nullable": true
          },
          "enable": {
            "type": "boolean",
            "description": "有効か"
          },
          "byRatio": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CRatio"
            },
            "description": "比率による制約",
            "nullable": true
          },
          "byPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CPrice"
            },
            "description": "金額による制約",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/CLiquidityBounds"
          }
        },
        "additionalProperties": false,
        "description": "流動性制約"
      },
      "CLiquidityBounds": {
        "type": "object",
        "properties": {
          "byRatio": {
            "$ref": "#/components/schemas/CBounds"
          },
          "byPrice": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "数値の入力可能範囲"
      },
      "CLongShort": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "description": "最適化モード",
            "nullable": true
          },
          "fixToLong": {
            "type": "boolean",
            "description": "目標ポートフォリオを Long に固定"
          }
        },
        "additionalProperties": false,
        "description": "Long/Short 最適化"
      },
      "CMaxShares": {
        "type": "object",
        "properties": {
          "shares": {
            "type": "string",
            "description": "判定の基準",
            "nullable": true
          },
          "upperBound": {
            "type": "number",
            "description": "比率",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "保有株式数上限"
      },
      "CMaximumStocks": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "有効か"
          },
          "upperLimit": {
            "type": "integer",
            "description": "上限",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "保有銘柄上限"
      },
      "COptimize": {
        "type": "object",
        "properties": {
          "longShortOptimizeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "L/S 最適化モード一覧",
            "nullable": true
          },
          "efficientFrontier": {
            "$ref": "#/components/schemas/CEfficientFrontier"
          },
          "longShort": {
            "$ref": "#/components/schemas/CLongShort"
          },
          "indexWeightedCopy": {
            "$ref": "#/components/schemas/CIndexWeightedCopy"
          },
          "bounds": {
            "$ref": "#/components/schemas/COptimizeBounds"
          }
        },
        "additionalProperties": false,
        "description": "最適化モード"
      },
      "COptimizeBounds": {
        "type": "object",
        "properties": {
          "efficientFrontier": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "設定可能範囲"
      },
      "COtherTrade": {
        "type": "object",
        "properties": {
          "attributeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtherIdName"
            },
            "description": "制約対象一覧",
            "nullable": true
          },
          "prohibitedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "売買種別一覧",
            "nullable": true
          },
          "comparativeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "比較種別一覧",
            "nullable": true
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CConstraint"
            },
            "description": "その他売買制約一覧",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/COtherTradeBounds"
          }
        },
        "additionalProperties": false,
        "description": "その他売買制約"
      },
      "COtherTradeBounds": {
        "type": "object",
        "properties": {
          "ratio": {
            "$ref": "#/components/schemas/CBounds"
          },
          "value": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "設定可能範囲"
      },
      "CPost": {
        "type": "object",
        "properties": {
          "liquidation": {
            "type": "boolean",
            "description": "整理ポスト"
          },
          "monitoring": {
            "type": "boolean",
            "description": "監理ポスト"
          }
        },
        "additionalProperties": false,
        "description": "監理・整理ポスト売買禁止"
      },
      "CPrice": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "制約対象",
            "nullable": true
          },
          "prohibited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "売買種別",
            "nullable": true
          },
          "lowerBound": {
            "type": "integer",
            "description": "金額",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "金額による制約"
      },
      "CProfitAndLoss": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "制約を課すか"
          },
          "lowerLimit": {
            "type": "integer",
            "description": "下限",
            "format": "int32",
            "nullable": true
          },
          "upperLimit": {
            "type": "integer",
            "description": "上限",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "実現損益制約"
      },
      "CRatio": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "制約対象",
            "nullable": true
          },
          "prohibited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "売買種別",
            "nullable": true
          },
          "upperBound": {
            "type": "number",
            "description": "比率",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "比率による制約"
      },
      "CRestrictionOfHolding": {
        "type": "object",
        "properties": {
          "shares": {
            "$ref": "#/components/schemas/CHoldingShares"
          },
          "sharesTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "判定基準一覧",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/CRestrictionOfHoldingBounds"
          }
        },
        "additionalProperties": false,
        "description": "個別銘柄保有禁止"
      },
      "CRestrictionOfHoldingBounds": {
        "type": "object",
        "properties": {
          "shares": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "入力可能範囲"
      },
      "CRestrictionOfTrading": {
        "type": "object",
        "properties": {
          "post": {
            "$ref": "#/components/schemas/CPost"
          }
        },
        "additionalProperties": false,
        "description": "個別銘柄売買禁止"
      },
      "CReturn": {
        "type": "object",
        "properties": {
          "expectedReturn": {
            "$ref": "#/components/schemas/CExpectedReturn"
          },
          "alpha": {
            "$ref": "#/components/schemas/CAlpha"
          },
          "multiplier": {
            "type": "number",
            "description": "期待リターン係数",
            "format": "double",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/CReturnBounds"
          }
        },
        "additionalProperties": false,
        "description": "リターン"
      },
      "CReturnBounds": {
        "type": "object",
        "properties": {
          "expectedReturn": {
            "$ref": "#/components/schemas/CBounds"
          },
          "alpha": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "設定可能範囲"
      },
      "CRisk": {
        "type": "object",
        "properties": {
          "targetRisk": {
            "$ref": "#/components/schemas/CTargetRisk"
          },
          "rejectRatio": {
            "type": "number",
            "description": "リスク回避度",
            "format": "double",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/CRiskBounds"
          }
        },
        "additionalProperties": false,
        "description": "リスク"
      },
      "CRiskBounds": {
        "type": "object",
        "properties": {
          "targetRisk": {
            "$ref": "#/components/schemas/CBounds"
          },
          "rejectRatio": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "設定可能範囲"
      },
      "CRiskIndexFactor": {
        "type": "object",
        "properties": {
          "factors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CFactor"
            },
            "description": "ファクター一覧",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "ファクター種別",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "リスクインデックスファクター"
      },
      "CStockBounds": {
        "type": "object",
        "properties": {
          "net": {
            "$ref": "#/components/schemas/CBounds"
          },
          "long": {
            "$ref": "#/components/schemas/CBounds"
          },
          "short": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "Fdsol.Npms.PM.Model.Dto.ConditionDetail.CTargetPortfolio.CStocks の設定可能範囲"
      },
      "CStocks": {
        "type": "object",
        "properties": {
          "net": {
            "$ref": "#/components/schemas/CMaximumStocks"
          },
          "long": {
            "$ref": "#/components/schemas/CMaximumStocks"
          },
          "short": {
            "$ref": "#/components/schemas/CMaximumStocks"
          }
        },
        "additionalProperties": false,
        "description": "保有銘柄数"
      },
      "CTCost": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "制約を課すか"
          },
          "upperLimit": {
            "type": "number",
            "description": "上限",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "売買コスト"
      },
      "CTHolding": {
        "type": "object",
        "properties": {
          "period": {
            "type": "number",
            "description": "想定保有期間",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "想定保有期間"
      },
      "CTargetPortfolio": {
        "type": "object",
        "properties": {
          "investment": {
            "$ref": "#/components/schemas/CInvestmentAmount"
          },
          "stocks": {
            "$ref": "#/components/schemas/CStocks"
          },
          "bounds": {
            "$ref": "#/components/schemas/CTargetPortfolioBounds"
          }
        },
        "additionalProperties": false,
        "description": "目標ポートフォリオ"
      },
      "CTargetPortfolioBounds": {
        "type": "object",
        "properties": {
          "investment": {
            "$ref": "#/components/schemas/CInvestmentAmountBounds"
          },
          "stocks": {
            "$ref": "#/components/schemas/CStockBounds"
          }
        },
        "additionalProperties": false,
        "description": "Fdsol.Npms.PM.Model.Dto.ConditionDetail.CTargetPortfolio の設定可能範囲"
      },
      "CTargetRisk": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "有効か"
          },
          "upperLimit": {
            "type": "number",
            "description": "ターゲットリスク上限",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ターゲットリスク"
      },
      "CTrade": {
        "type": "object",
        "properties": {
          "approvedTradeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "許可する取引一覧",
            "nullable": true
          },
          "prohibitedTradeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringCIdName"
            },
            "description": "禁止する取引一覧",
            "nullable": true
          },
          "profitAndLoss": {
            "$ref": "#/components/schemas/CProfitAndLoss"
          },
          "turnover": {
            "$ref": "#/components/schemas/CTurnover"
          },
          "amount": {
            "$ref": "#/components/schemas/CTradingAmount"
          },
          "approved": {
            "type": "string",
            "description": "許可する取引",
            "nullable": true
          },
          "prohibited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "禁止する取引",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/CTradeBounds"
          }
        },
        "additionalProperties": false,
        "description": "売買制約"
      },
      "CTradeBounds": {
        "type": "object",
        "properties": {
          "profitAndLoss": {
            "$ref": "#/components/schemas/CBounds"
          },
          "turnover": {
            "$ref": "#/components/schemas/CBounds"
          },
          "amount": {
            "$ref": "#/components/schemas/CAmountBounds"
          }
        },
        "additionalProperties": false,
        "description": "設定可能範囲"
      },
      "CTradingAmount": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "制約を課すか"
          },
          "mode": {
            "type": "string",
            "description": "指定方法",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "金額",
            "format": "int32",
            "nullable": true
          },
          "lot": {
            "type": "number",
            "description": "売買単位",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "最小売買金額制約"
      },
      "CTradingCost": {
        "type": "object",
        "properties": {
          "tradingCost": {
            "$ref": "#/components/schemas/CTCost"
          },
          "coefficient": {
            "$ref": "#/components/schemas/CCoefficiests"
          },
          "estimatedHolding": {
            "$ref": "#/components/schemas/CTHolding"
          },
          "bounds": {
            "$ref": "#/components/schemas/CTradingCostBounds"
          }
        },
        "additionalProperties": false,
        "description": "売買コスト"
      },
      "CTradingCostBounds": {
        "type": "object",
        "properties": {
          "tradingCost": {
            "$ref": "#/components/schemas/CBounds"
          },
          "coefficient": {
            "$ref": "#/components/schemas/CBounds"
          },
          "estimatedHolding": {
            "$ref": "#/components/schemas/CBounds"
          }
        },
        "additionalProperties": false,
        "description": "設定可能範囲"
      },
      "CTurnover": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "制約を課すか"
          },
          "upperLimit": {
            "type": "number",
            "description": "上限",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "回転率制約"
      },
      "ConditionDetail": {
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/CInfo"
          },
          "targetPortfolio": {
            "$ref": "#/components/schemas/CTargetPortfolio"
          },
          "benchmark": {
            "$ref": "#/components/schemas/CBenchmark"
          },
          "industryRatio": {
            "$ref": "#/components/schemas/CIndustryRatio"
          },
          "holdingRatio": {
            "$ref": "#/components/schemas/CHoldingRatio"
          },
          "restrictionOfHolding": {
            "$ref": "#/components/schemas/CRestrictionOfHolding"
          },
          "risk": {
            "$ref": "#/components/schemas/CRisk"
          },
          "return": {
            "$ref": "#/components/schemas/CReturn"
          },
          "riskIndexFactor": {
            "$ref": "#/components/schemas/CRiskIndexFactor"
          },
          "industryFactor": {
            "$ref": "#/components/schemas/CIndustryFactor"
          },
          "trade": {
            "$ref": "#/components/schemas/CTrade"
          },
          "tradingCost": {
            "$ref": "#/components/schemas/CTradingCost"
          },
          "liquidity": {
            "$ref": "#/components/schemas/CLiquidity"
          },
          "restrictionOfTrading": {
            "$ref": "#/components/schemas/CRestrictionOfTrading"
          },
          "other": {
            "$ref": "#/components/schemas/COtherTrade"
          },
          "optimize": {
            "$ref": "#/components/schemas/COptimize"
          }
        },
        "additionalProperties": false,
        "description": "条件の本体"
      },
      "ConditionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "条件名を取得または設定します。"
          },
          "description": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "description": "条件の詳細情報を取得または設定します。",
            "nullable": true
          },
          "detail": {
            "$ref": "#/components/schemas/ConditionDetail"
          },
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64"
          },
          "updateTime": {
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "updateUserName": {
            "type": "string",
            "description": "更新ユーザー名",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "条件の DTO"
      },
      "ConditionDtoNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/ConditionDto"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "ConditionDtoTableResult": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "検索などの処理後のトータルレコード数を取得または設定します。",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "ページインデックスを取得または設定します。",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "description": "リクエストの連番を取得または設定します。",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionDto"
            },
            "description": "レコードを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "テーブルのビューへの結果クラス。"
      },
      "ConditionDtoTableResultNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/ConditionDtoTableResult"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "CreateAssetDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "データ日付を取得または設定します。",
            "nullable": true
          },
          "assetListType": {
            "$ref": "#/components/schemas/AssetListType"
          },
          "code": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "コードを取得または設定します。"
          },
          "quantity": {
            "type": "number",
            "description": "数量を取得または設定します。\r\n数量はコンテキストにより株数、ウェイト、金額などの意味を持ちます。",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "資産作成のデータ転送オブジェクトのクラス。"
      },
      "CreateConditionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "条件名を取得または設定します。"
          },
          "description": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "description": "条件の詳細情報を取得または設定します。",
            "nullable": true
          },
          "detail": {
            "$ref": "#/components/schemas/ConditionDetail"
          }
        },
        "additionalProperties": false,
        "description": "条件作成のデータ転送オブジェクトのクラス。"
      },
      "CreatePortfolioDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "ポートフォリオ名を取得または設定します。"
          },
          "description": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "description": "ポートフォリオの詳細情報を取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ポートフォリオ作成のデータ転送オブジェクトのクラス。"
      },
      "DeleteAssetsDto": {
        "required": [
          "codes",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ポートフォリオ ID を取得または設定します。",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "description": "データ日付を取得または設定します。",
            "nullable": true
          },
          "assetListType": {
            "$ref": "#/components/schemas/AssetListType"
          },
          "codes": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "コードの配列を取得または設定します。"
          }
        },
        "additionalProperties": false,
        "description": "複数の資産を削除する際のデータ転送オブジェクト。"
      },
      "DoubleNullableCRange": {
        "type": "object",
        "properties": {
          "lowerLimit": {
            "type": "number",
            "description": "下限",
            "format": "double",
            "nullable": true
          },
          "upperLimit": {
            "type": "number",
            "description": "上限",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "上下限"
      },
      "IdsDto": {
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "ID の配列を取得または設定します。"
          }
        },
        "additionalProperties": false,
        "description": "ID の配列のデータ転送オブジェクトのクラス。"
      },
      "NpmsErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "タイトルを取得または設定します。",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "詳細メッセージを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API のエラー応答のクラス。"
      },
      "NpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "NpmsWarningResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "タイトルを取得または設定します。",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "詳細メッセージを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API の警告応答のクラス。"
      },
      "ObjectTableResult": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "検索などの処理後のトータルレコード数を取得または設定します。",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "ページインデックスを取得または設定します。",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "description": "リクエストの連番を取得または設定します。",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": { },
            "description": "レコードを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "テーブルのビューへの結果クラス。"
      },
      "ObjectTableResultNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/ObjectTableResult"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "OtherIdName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "名称",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "単位",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "制約対象とその名称"
      },
      "PortfolioDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "ポートフォリオ名を取得または設定します。"
          },
          "description": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "description": "ポートフォリオの詳細情報を取得または設定します。",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ポートフォリオ ID を取得または設定します。",
            "format": "int64"
          },
          "updateTime": {
            "type": "string",
            "description": "更新日時を取得または設定します。",
            "format": "date-time"
          },
          "updateUserName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "更新ユーザー名を取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ポートフォリオのデータ転送オブジェクトのクラス。"
      },
      "PortfolioDtoNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/PortfolioDto"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "PortfolioDtoTableResult": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "検索などの処理後のトータルレコード数を取得または設定します。",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "ページインデックスを取得または設定します。",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "description": "リクエストの連番を取得または設定します。",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioDto"
            },
            "description": "レコードを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "テーブルのビューへの結果クラス。"
      },
      "PortfolioDtoTableResultNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/PortfolioDtoTableResult"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "StockDto": {
        "type": "object",
        "properties": {
          "dataDate": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "データ日付を取得または設定します。",
            "nullable": true
          },
          "code": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "コードを取得または設定します。",
            "nullable": true
          },
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "漢字名を取得または設定します。",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "株価を取得または設定します。",
            "format": "double",
            "nullable": true
          },
          "dailyReturn": {
            "type": "number",
            "description": "日次リターンを取得または設定します。",
            "format": "double",
            "nullable": true
          },
          "numberOfListedStock": {
            "type": "number",
            "description": "上場発行済み株式数を取得または設定します。",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "株式のデータ転送オブジェクトのクラス。"
      },
      "StockDtoNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/StockDto"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "StockDtoTableResult": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "検索などの処理後のトータルレコード数を取得または設定します。",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "ページインデックスを取得または設定します。",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "description": "リクエストの連番を取得または設定します。",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockDto"
            },
            "description": "レコードを取得または設定します。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "テーブルのビューへの結果クラス。"
      },
      "StockDtoTableResultNpmsOkResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "コードを取得または設定します。\r\n`ok`、`warn`、`error` のいずれかの文字列です。",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "HTTP ステータスコードを取得または設定します。",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "処理に関するメッセージを取得または設定します。\r\n成功応答に対して、追加的なメッセージを設定します。",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/StockDtoTableResult"
          }
        },
        "additionalProperties": false,
        "description": "API の成功応答のクラス。"
      },
      "StringCIdName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "名称",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Id と名称"
      },
      "StringCRange": {
        "type": "object",
        "properties": {
          "lowerLimit": {
            "type": "string",
            "description": "下限",
            "nullable": true
          },
          "upperLimit": {
            "type": "string",
            "description": "上限",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "上下限"
      },
      "UpdateAssetDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "データ日付を取得または設定します。",
            "nullable": true
          },
          "assetListType": {
            "$ref": "#/components/schemas/AssetListType"
          },
          "code": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "コードを取得または設定します。"
          },
          "quantity": {
            "type": "number",
            "description": "数量を取得または設定します。\r\n数量はコンテキストにより株数、ウェイト、金額などの意味を持ちます。",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "description": "ポートフォリオ ID を取得または設定します。",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "資産更新のデータ転送オブジェクトのクラス。"
      },
      "UpdateConditionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "条件名を取得または設定します。"
          },
          "description": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "description": "条件の詳細情報を取得または設定します。",
            "nullable": true
          },
          "detail": {
            "$ref": "#/components/schemas/ConditionDetail"
          },
          "id": {
            "type": "integer",
            "description": "条件 Id",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "条件更新の Dto"
      },
      "UpdatePortfolioDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "ポートフォリオ名を取得または設定します。"
          },
          "description": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "description": "ポートフォリオの詳細情報を取得または設定します。",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ポートフォリオ ID を取得または設定します。",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "ポートフォリオ更新のデータ転送オブジェクトのクラス。"
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}